# This workflow performs static analysis checks.
name: Library Dafny verification

on:
  workflow_call:
    inputs:
      dafny:
        description: "The Dafny version to run"
        required: true
        type: string
      regenerate-code:
        description: "Regenerate code using smithy-dafny"
        required: false
        default: false
        type: boolean

jobs:
  verification:
    strategy:
      fail-fast: false
      matrix:
        library:
          [
            TestVectorsAwsCryptographicMaterialProviders,
            AwsCryptographyPrimitives,
            ComAmazonawsKms,
            ComAmazonawsDynamodb,
            AwsCryptographicMaterialProviders,
            StandardLibrary,
          ]
        os: [macos-latest-large]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
    steps:
      - name: Support longpaths
        run: |
          git config --global core.longpaths true

      - uses: actions/checkout@v4
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodules we DO need.
      - run: git submodule update --init libraries
      - run: git submodule update --init --recursive smithy-dafny

      - name: Setup Dafny
        uses: ./.github/actions/setup_dafny
        with:
          dafny-version: ${{ inputs.dafny }}

      - name: Install Smithy-Dafny codegen dependencies
        if: ${{ inputs.regenerate-code }}
        uses: ./.github/actions/install_smithy_dafny_codegen_dependencies

      - name: Regenerate code using smithy-dafny if necessary
        if: ${{ inputs.regenerate-code }}
        uses: ./.github/actions/polymorph_codegen
        with:
          dafny: ${{ env.DAFNY_VERSION }}
          library: ${{ matrix.library }}
          diff-generated-code: false

      - name: Verify ${{ matrix.library }} Dafny code
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make verify CORES=$CORES

      # If you ever need to figure out ONE file in CI, here is a pttern
      # - name: Verify ${{ matrix.library }} Dafny code
      #   working-directory: ./${{ matrix.library }}
      #   run: |
      #     # This works because `node` is installed by default on GHA runners
      #     CORES=$(node -e 'console.log(os.cpus().length)')
      #     make verify_single FILE=dafny/AwsCryptographyKeyStore/src/CreateKeys.dfy CORES=$CORES

      - name: Check solver resource use
        if: success() || failure()
        working-directory: ./${{ matrix.library }}
        run: |
          make dafny-reportgenerator
