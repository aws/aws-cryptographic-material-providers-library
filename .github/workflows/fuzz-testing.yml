name: MPL Fuzz Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  # Allow manual triggering
  workflow_dispatch:
    inputs:
      duration:
        description: 'Duration of the fuzz testing in minutes'
        required: false
        default: '10'
        type: string

jobs:
  fuzz-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        # Install just the test dependencies
        pip install pytest pytest-xdist pytest-cov hypothesis boto3
        # Install the test package
        pip install -e ./TestVectorsAwsCryptographicMaterialProviders/runtimes/python/

    # Source the CI account credentials if available (only on protected branches/internal PRs)
    - name: Setup AWS Credentials
      if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
      run: |
        export AWS_REGION=us-west-2
        if [ -f "assume-ci-role.sh" ]; then
          echo "Setting up AWS credentials for KMS testing"
          chmod +x ./assume-ci-role.sh
          source ./assume-ci-role.sh || echo "Failed to assume role, continuing without AWS credentials"
        fi
      shell: bash
      continue-on-error: true

    # Run the basic CI-friendly fuzz tests
    - name: Run Basic Fuzz Tests
      run: |
        cd TestVectorsAwsCryptographicMaterialProviders/runtimes/python
        # Set environment variable to indicate CI environment
        export CI=true
        python -m pytest -xvs test/test_fuzz_ci.py

    # Run the more intensive CI-friendly fuzz tests with longer duration
    - name: Run Extended Fuzz Tests
      if: github.event_name == 'workflow_dispatch'
      env:
        TEST_DURATION: ${{ github.event.inputs.duration }}
        CI: true
      run: |
        # Set environment variables for hypothesis
        export HYPOTHESIS_MAX_EXAMPLES=100
        export HYPOTHESIS_DEADLINE=30000  # 30 seconds
        
        cd TestVectorsAwsCryptographicMaterialProviders/runtimes/python
        # Run the CI tests with more examples (will skip crypto-dependent tests)
        python -m pytest -xvs test/test_fuzz_ci.py
