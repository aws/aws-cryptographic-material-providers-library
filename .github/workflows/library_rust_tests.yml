# This workflow performs tests in Rust.
name: Library Rust tests

on:
  workflow_call:
    inputs:
      dafny:
        description: "The Dafny version to run"
        required: true
        type: string
      regenerate-code:
        description: "Regenerate code using smithy-dafny"
        required: false
        default: false
        type: boolean

jobs:
  testRust:
    strategy:
      fail-fast: false
      matrix:
        library:
          [
            StandardLibrary,
            ComAmazonawsDynamodb,
            ComAmazonawsKms,
            AwsCryptographyPrimitives,
            AwsCryptographicMaterialProviders,
            TestVectorsAwsCryptographicMaterialProviders,
          ]
        # removed windows-latest because somehow it can't build aws-lc in CI
        os: [ubuntu-22.04, macos-13]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    env:
      RUST_MIN_STACK: 404857600
    steps:
      - name: Support longpaths on Git checkout
        run: |
          git config --global core.longpaths true
      - uses: actions/checkout@v3
      - name: Init Submodules
        shell: bash
        run: |
          git submodule update --init libraries
          git submodule update --init --recursive smithy-dafny

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-MPL-Dafny-Role-us-west-2
          role-session-name: RustTests

      - name: Setup Rust Toolchain for GitHub CI
        uses: actions-rust-lang/setup-rust-toolchain@v1.15.2
        with:
          components: rustfmt

      - name: Setup Dafny
        uses: ./.github/actions/setup_dafny
        with:
          dafny-version: ${{ inputs.dafny }}

      - name: Setup NASM for Windows (aws-lc-sys)
        if: matrix.os == 'windows-latest'
        uses: ilammy/setup-nasm@v1

      # Go is needed for aws-lc-FIPS
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ">=1.18"

      - name: Install Smithy-Dafny codegen dependencies
        uses: ./.github/actions/install_smithy_dafny_codegen_dependencies

      - name: Run make polymorph_rust
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make polymorph_rust

      - name: Compile ${{ matrix.library }} implementation
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make transpile_rust TRANSPILE_TESTS_IN_RUST=1 CORES=$CORES

      - name: Test ${{ matrix.library }} Rust
        shell: bash
        working-directory: ./${{ matrix.library }}
        run: |
          make test_rust
          make test_rust_debug

      - name: Test ${{ matrix.library }} Rust Fips
        if: matrix.library == 'AwsCryptographyPrimitives' || matrix.library == 'AwsCryptographicMaterialProviders' || matrix.library == 'TestVectorsAwsCryptographicMaterialProviders'
        shell: bash
        working-directory: ./${{ matrix.library }}/runtimes/rust
        run: |
          cargo test --release --features fips -- --nocapture
          cargo test --features fips -- --nocapture
