# This workflow performs tests in Java.
name: Library Java tests

on:
  workflow_call:
    inputs:
      dafny:
        description: "The Dafny version to run"
        required: true
        type: string
      regenerate-code:
        description: "Regenerate code using smithy-dafny"
        required: false
        default: false
        type: boolean

jobs:
  testJava:
    strategy:
      fail-fast: false
      matrix:
        library: [
            AwsCryptographyPrimitives,
            ComAmazonawsKms,
            ComAmazonawsDynamodb,
            AwsCryptographicMaterialProviders,
            # TestVectorsAwsCryptographicMaterialProviders,
            StandardLibrary,
          ]
        os: [
            # TODO just test on mac for now
            # windows-latest,
            ubuntu-22.04,
            macos-13,
          ]
        java-versions: [8, 11, 16, 17]
    runs-on: ${{ matrix.os }}
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        shell: bash
    steps:
      - name: Support longpaths on Git checkout
        run: |
          git config --global core.longpaths true
      # KMS and MPL tests need to use credentials which can call KMS
      - name: Configure AWS Credentials for Tests
        uses: aws-actions/configure-aws-credentials@v4
        if: matrix.library == 'ComAmazonawsKms' || matrix.library == 'ComAmazonawsDynamodb' || matrix.library == 'AwsCryptographicMaterialProviders' || matrix.library == 'TestVectorsAwsCryptographicMaterialProviders'
        with:
          aws-region: us-west-2
          role-to-assume: arn:aws:iam::370957321024:role/GitHub-CI-MPL-Dafny-Role-us-west-2
          role-session-name: JavaTests

      - uses: actions/checkout@v4
      # The specification submodule is private so we don't have access, but we don't need
      # it to verify the Dafny code. Instead we manually pull the submodules we DO need.
      - run: git submodule update --init libraries
      - run: git submodule update --init --recursive smithy-dafny

      - name: Setup Dafny
        uses: dafny-lang/setup-dafny-action@v1.8.0
        with:
          dafny-version: ${{ inputs.dafny }}

      - name: Regenerate code using smithy-dafny if necessary
        if: ${{ inputs.regenerate-code }}
        uses: ./.github/actions/polymorph_codegen
        with:
          dafny: ${{ env.DAFNY_VERSION }}
          library: ${{ matrix.library }}
          diff-generated-code: false

      # - name: Copy over keys.json so that it is discoverable by the tests
      #   uses: gradle/gradle-build-action@v2
      #   with:
      #     arguments: copyKeysJSON
      #     build-root-directory: ./TestVectorsAwsCryptographicMaterialProviders/runtimes/java

      - name: Setup Java ${{matrix.java-versions}}
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: ${{matrix.java-versions}}

      - name: Build ${{ matrix.library }} implementation
        working-directory: ./${{ matrix.library }}
        run: |
          # This works because `node` is installed by default on GHA runners
          CORES=$(node -e 'console.log(os.cpus().length)')
          make build_java CORES=$CORES

      - name: Test ${{ matrix.library }} on ${{matrix.java-versions}}
        working-directory: ./${{ matrix.library }}
        run: |
          make test_java
