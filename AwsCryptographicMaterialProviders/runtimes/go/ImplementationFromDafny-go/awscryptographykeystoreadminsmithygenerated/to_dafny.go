// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographykeystoreadminsmithygenerated

import (
	"unicode/utf8"

	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/dynamodb/DynamoDBwrapped"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/dynamodb/comamazonawsdynamodbsmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/kms/KMSwrapped"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/kms/comamazonawskmssmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyKeyStoreAdminTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyKeyStoreTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoreadminsmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoresmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoresmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/primitives/awscryptographyprimitivessmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/primitives/awscryptographyprimitivessmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/Wrappers"
	"github.com/aws/aws-sdk-go-v2/service/dynamodb"
	"github.com/aws/aws-sdk-go-v2/service/kms"
	"github.com/aws/smithy-go"
	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
)

func ApplyMutationInput_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationInput) AwsCryptographyKeyStoreAdminTypes.ApplyMutationInput {

	return func() AwsCryptographyKeyStoreAdminTypes.ApplyMutationInput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_ApplyMutationInput_.Create_ApplyMutationInput_(aws_cryptography_keyStoreAdmin_ApplyMutationInput_MutationToken_ToDafny(nativeInput.MutationToken), aws_cryptography_keyStoreAdmin_ApplyMutationInput_PageSize_ToDafny(nativeInput.PageSize), aws_cryptography_keyStoreAdmin_ApplyMutationInput_Strategy_ToDafny(nativeInput.Strategy), aws_cryptography_keyStoreAdmin_ApplyMutationInput_SystemKey_ToDafny(nativeInput.SystemKey))
	}()

}

func ApplyMutationOutput_ToDafny(nativeOutput awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationOutput) AwsCryptographyKeyStoreAdminTypes.ApplyMutationOutput {

	return func() AwsCryptographyKeyStoreAdminTypes.ApplyMutationOutput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_ApplyMutationOutput_.Create_ApplyMutationOutput_(aws_cryptography_keyStoreAdmin_ApplyMutationOutput_MutationResult_ToDafny(nativeOutput.MutationResult), aws_cryptography_keyStoreAdmin_ApplyMutationOutput_MutatedBranchKeyItems_ToDafny(nativeOutput.MutatedBranchKeyItems))
	}()

}

func CreateKeyInput_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.CreateKeyInput) AwsCryptographyKeyStoreAdminTypes.CreateKeyInput {

	return func() AwsCryptographyKeyStoreAdminTypes.CreateKeyInput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_CreateKeyInput_.Create_CreateKeyInput_(aws_cryptography_keyStoreAdmin_CreateKeyInput_Identifier_ToDafny(nativeInput.Identifier), aws_cryptography_keyStoreAdmin_CreateKeyInput_EncryptionContext_ToDafny(nativeInput.EncryptionContext), aws_cryptography_keyStoreAdmin_CreateKeyInput_KmsArn_ToDafny(nativeInput.KmsArn), aws_cryptography_keyStoreAdmin_CreateKeyInput_Strategy_ToDafny(nativeInput.Strategy))
	}()

}

func CreateKeyOutput_ToDafny(nativeOutput awscryptographykeystoreadminsmithygeneratedtypes.CreateKeyOutput) AwsCryptographyKeyStoreAdminTypes.CreateKeyOutput {

	return func() AwsCryptographyKeyStoreAdminTypes.CreateKeyOutput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_CreateKeyOutput_.Create_CreateKeyOutput_(aws_cryptography_keyStoreAdmin_CreateKeyOutput_Identifier_ToDafny(nativeOutput.Identifier))
	}()

}

func DescribeMutationInput_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.DescribeMutationInput) AwsCryptographyKeyStoreAdminTypes.DescribeMutationInput {

	return func() AwsCryptographyKeyStoreAdminTypes.DescribeMutationInput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_DescribeMutationInput_.Create_DescribeMutationInput_(aws_cryptography_keyStoreAdmin_DescribeMutationInput_Identifier_ToDafny(nativeInput.Identifier))
	}()

}

func DescribeMutationOutput_ToDafny(nativeOutput awscryptographykeystoreadminsmithygeneratedtypes.DescribeMutationOutput) AwsCryptographyKeyStoreAdminTypes.DescribeMutationOutput {

	return func() AwsCryptographyKeyStoreAdminTypes.DescribeMutationOutput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_DescribeMutationOutput_.Create_DescribeMutationOutput_(aws_cryptography_keyStoreAdmin_DescribeMutationOutput_MutationInFlight_ToDafny(nativeOutput.MutationInFlight))
	}()

}

func InitializeMutationInput_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.InitializeMutationInput) AwsCryptographyKeyStoreAdminTypes.InitializeMutationInput {

	return func() AwsCryptographyKeyStoreAdminTypes.InitializeMutationInput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_InitializeMutationInput_.Create_InitializeMutationInput_(aws_cryptography_keyStoreAdmin_InitializeMutationInput_Identifier_ToDafny(nativeInput.Identifier), aws_cryptography_keyStoreAdmin_InitializeMutationInput_Mutations_ToDafny(nativeInput.Mutations), aws_cryptography_keyStoreAdmin_InitializeMutationInput_Strategy_ToDafny(nativeInput.Strategy), aws_cryptography_keyStoreAdmin_InitializeMutationInput_SystemKey_ToDafny(nativeInput.SystemKey), aws_cryptography_keyStoreAdmin_InitializeMutationInput_DoNotVersion_ToDafny(nativeInput.DoNotVersion))
	}()

}

func InitializeMutationOutput_ToDafny(nativeOutput awscryptographykeystoreadminsmithygeneratedtypes.InitializeMutationOutput) AwsCryptographyKeyStoreAdminTypes.InitializeMutationOutput {

	return func() AwsCryptographyKeyStoreAdminTypes.InitializeMutationOutput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_InitializeMutationOutput_.Create_InitializeMutationOutput_(aws_cryptography_keyStoreAdmin_InitializeMutationOutput_MutationToken_ToDafny(nativeOutput.MutationToken), aws_cryptography_keyStoreAdmin_InitializeMutationOutput_MutatedBranchKeyItems_ToDafny(nativeOutput.MutatedBranchKeyItems), aws_cryptography_keyStoreAdmin_InitializeMutationOutput_InitializeMutationFlag_ToDafny(nativeOutput.InitializeMutationFlag), aws_cryptography_keyStoreAdmin_InitializeMutationOutput_LastModifiedTime_ToDafny(nativeOutput.LastModifiedTime))
	}()

}

func VersionKeyInput_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.VersionKeyInput) AwsCryptographyKeyStoreAdminTypes.VersionKeyInput {

	return func() AwsCryptographyKeyStoreAdminTypes.VersionKeyInput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_VersionKeyInput_.Create_VersionKeyInput_(aws_cryptography_keyStoreAdmin_VersionKeyInput_Identifier_ToDafny(nativeInput.Identifier), aws_cryptography_keyStoreAdmin_VersionKeyInput_KmsArn_ToDafny(nativeInput.KmsArn), aws_cryptography_keyStoreAdmin_VersionKeyInput_Strategy_ToDafny(nativeInput.Strategy))
	}()

}

func VersionKeyOutput_ToDafny(nativeOutput awscryptographykeystoreadminsmithygeneratedtypes.VersionKeyOutput) AwsCryptographyKeyStoreAdminTypes.VersionKeyOutput {

	return func() AwsCryptographyKeyStoreAdminTypes.VersionKeyOutput {

		return AwsCryptographyKeyStoreAdminTypes.Companion_VersionKeyOutput_.Create_VersionKeyOutput_()
	}()

}

func KeyStoreAdminException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.KeyStoreAdminException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_KeyStoreAdminException_(aws_cryptography_keyStoreAdmin_KeyStoreAdminException_message_ToDafny(nativeInput.Message))
	}()

}

func MutationConflictException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.MutationConflictException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_MutationConflictException_(aws_cryptography_keyStoreAdmin_MutationConflictException_message_ToDafny(nativeInput.Message))
	}()

}

func MutationFromException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.MutationFromException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_MutationFromException_(aws_cryptography_keyStoreAdmin_MutationFromException_message_ToDafny(nativeInput.Message))
	}()

}

func MutationInvalidException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.MutationInvalidException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_MutationInvalidException_(aws_cryptography_keyStoreAdmin_MutationInvalidException_message_ToDafny(nativeInput.Message))
	}()

}

func MutationToException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.MutationToException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_MutationToException_(aws_cryptography_keyStoreAdmin_MutationToException_message_ToDafny(nativeInput.Message))
	}()

}

func MutationVerificationException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.MutationVerificationException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_MutationVerificationException_(aws_cryptography_keyStoreAdmin_MutationVerificationException_message_ToDafny(nativeInput.Message))
	}()

}

func UnexpectedStateException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.UnexpectedStateException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_UnexpectedStateException_(aws_cryptography_keyStoreAdmin_UnexpectedStateException_message_ToDafny(nativeInput.Message))
	}()

}

func UnsupportedFeatureException_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.UnsupportedFeatureException) AwsCryptographyKeyStoreAdminTypes.Error {
	return func() AwsCryptographyKeyStoreAdminTypes.Error {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_UnsupportedFeatureException_(aws_cryptography_keyStoreAdmin_UnsupportedFeatureException_message_ToDafny(nativeInput.Message))
	}()

}

func CollectionOfErrors_Input_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.CollectionOfErrors) AwsCryptographyKeyStoreAdminTypes.Error {
	var e []interface{}
	for _, i2 := range nativeInput.ListOfErrors {
		e = append(e, Error_ToDafny(i2))
	}
	return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_CollectionOfErrors_(dafny.SeqOf(e...), dafny.SeqOfChars([]dafny.Char(nativeInput.Message)...))
}
func OpaqueError_Input_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.OpaqueError) AwsCryptographyKeyStoreAdminTypes.Error {
	return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_Opaque_(nativeInput.ErrObject)
}

func Error_ToDafny(err error) AwsCryptographyKeyStoreAdminTypes.Error {
	switch err.(type) {
	// Service Errors
	case awscryptographykeystoreadminsmithygeneratedtypes.KeyStoreAdminException:
		return KeyStoreAdminException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.KeyStoreAdminException))

	case awscryptographykeystoreadminsmithygeneratedtypes.MutationConflictException:
		return MutationConflictException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.MutationConflictException))

	case awscryptographykeystoreadminsmithygeneratedtypes.MutationFromException:
		return MutationFromException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.MutationFromException))

	case awscryptographykeystoreadminsmithygeneratedtypes.MutationInvalidException:
		return MutationInvalidException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.MutationInvalidException))

	case awscryptographykeystoreadminsmithygeneratedtypes.MutationToException:
		return MutationToException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.MutationToException))

	case awscryptographykeystoreadminsmithygeneratedtypes.MutationVerificationException:
		return MutationVerificationException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.MutationVerificationException))

	case awscryptographykeystoreadminsmithygeneratedtypes.UnexpectedStateException:
		return UnexpectedStateException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.UnexpectedStateException))

	case awscryptographykeystoreadminsmithygeneratedtypes.UnsupportedFeatureException:
		return UnsupportedFeatureException_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.UnsupportedFeatureException))

	//DependentErrors
	case awscryptographyprimitivessmithygeneratedtypes.AwsCryptographicPrimitivesBaseException:
		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_AwsCryptographyPrimitives_(awscryptographyprimitivessmithygenerated.Error_ToDafny(err))

	case awscryptographykeystoresmithygeneratedtypes.KeyStoreBaseException:
		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_AwsCryptographyKeyStore_(awscryptographykeystoresmithygenerated.Error_ToDafny(err))

	case *smithy.OperationError:
		if err.(*smithy.OperationError).Service() == "DynamoDB" {
			DynamoDBError := comamazonawsdynamodbsmithygenerated.Error_ToDafny(err)
			return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_ComAmazonawsDynamodb_(DynamoDBError)
		}
		if err.(*smithy.OperationError).Service() == "KMS" {
			KMSError := comamazonawskmssmithygenerated.Error_ToDafny(err)
			return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_ComAmazonawsKms_(KMSError)
		}
		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_Opaque_(err)

	case smithy.APIError:
		DynamoDBError := comamazonawsdynamodbsmithygenerated.Error_ToDafny(err)
		if !DynamoDBError.Is_OpaqueWithText() {
			return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_ComAmazonawsDynamodb_(DynamoDBError)
		}
		KMSError := comamazonawskmssmithygenerated.Error_ToDafny(err)
		if !KMSError.Is_OpaqueWithText() {
			return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_ComAmazonawsKms_(KMSError)
		}
		return AwsCryptographyKeyStoreAdminTypes.Companion_Error_.Create_Opaque_(err)

	//Unmodelled Errors
	case awscryptographykeystoreadminsmithygeneratedtypes.CollectionOfErrors:
		return CollectionOfErrors_Input_ToDafny(err.(awscryptographykeystoreadminsmithygeneratedtypes.CollectionOfErrors))

	default:
		error, ok := err.(awscryptographykeystoreadminsmithygeneratedtypes.OpaqueError)
		if !ok {
			panic("Error is not an OpaqueError")
		}
		return OpaqueError_Input_ToDafny(error)
	}
}

func KeyStoreAdminConfig_ToDafny(nativeInput awscryptographykeystoreadminsmithygeneratedtypes.KeyStoreAdminConfig) AwsCryptographyKeyStoreAdminTypes.KeyStoreAdminConfig {
	return func() AwsCryptographyKeyStoreAdminTypes.KeyStoreAdminConfig {

		return AwsCryptographyKeyStoreAdminTypes.Companion_KeyStoreAdminConfig_.Create_KeyStoreAdminConfig_(aws_cryptography_keyStoreAdmin_KeyStoreAdminConfig_logicalKeyStoreName_ToDafny(nativeInput.LogicalKeyStoreName), aws_cryptography_keyStoreAdmin_KeyStoreAdminConfig_storage_ToDafny(nativeInput.Storage))
	}()

}

func aws_cryptography_keyStoreAdmin_ApplyMutationInput_MutationToken_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationToken) AwsCryptographyKeyStoreAdminTypes.MutationToken {
	return func() AwsCryptographyKeyStoreAdminTypes.MutationToken {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutationToken_.Create_MutationToken_(aws_cryptography_keyStoreAdmin_MutationToken_Identifier_ToDafny(input.Identifier), aws_cryptography_keyStoreAdmin_MutationToken_UUID_ToDafny(input.UUID), aws_cryptography_keyStoreAdmin_MutationToken_CreateTime_ToDafny(input.CreateTime))
	}()
}

func aws_cryptography_keyStoreAdmin_MutationToken_Identifier_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationToken_UUID_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationToken_CreateTime_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationInput_PageSize_ToDafny(input *int32) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationInput_Strategy_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategy) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsReEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsReEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreTypes.AwsKms)))
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsDecryptEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsDecryptEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.AwsKmsDecryptEncrypt)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsReEncrypt_ToDafny(input awscryptographykeystoresmithygeneratedtypes.AwsKms) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreTypes.Companion_AwsKms_.Create_AwsKms_(aws_cryptography_keyStore_AwsKms_grantTokens_ToDafny(input.GrantTokens), aws_cryptography_keyStore_AwsKms_kmsClient_ToDafny(input.KmsClient)))
	}()
}

func aws_cryptography_keyStore_AwsKms_grantTokens_ToDafny(input []string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := aws_cryptography_keyStore_GrantTokenList_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOf(fieldValue...))
	}()
}

func aws_cryptography_keyStore_GrantTokenList_member_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStore_AwsKms_kmsClient_ToDafny(input *kms.Client) Wrappers.Option {
	return func() Wrappers.Option {
		if (input) == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(&KMSwrapped.Shim{Client: input})
	}()
}

func aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsDecryptEncrypt_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.AwsKmsDecryptEncrypt) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.Companion_AwsKmsDecryptEncrypt_.Create_AwsKmsDecryptEncrypt_(aws_cryptography_keyStoreAdmin_AwsKmsDecryptEncrypt_decrypt_ToDafny(input.Decrypt), aws_cryptography_keyStoreAdmin_AwsKmsDecryptEncrypt_encrypt_ToDafny(input.Encrypt)))
	}()
}

func aws_cryptography_keyStoreAdmin_AwsKmsDecryptEncrypt_decrypt_ToDafny(input *awscryptographykeystoresmithygeneratedtypes.AwsKms) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreTypes.Companion_AwsKms_.Create_AwsKms_(aws_cryptography_keyStore_AwsKms_grantTokens_ToDafny(input.GrantTokens), aws_cryptography_keyStore_AwsKms_kmsClient_ToDafny(input.KmsClient)))
	}()
}

func aws_cryptography_keyStoreAdmin_AwsKmsDecryptEncrypt_encrypt_ToDafny(input *awscryptographykeystoresmithygeneratedtypes.AwsKms) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreTypes.Companion_AwsKms_.Create_AwsKms_(aws_cryptography_keyStore_AwsKms_grantTokens_ToDafny(input.GrantTokens), aws_cryptography_keyStore_AwsKms_kmsClient_ToDafny(input.KmsClient)))
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationInput_SystemKey_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.SystemKey) AwsCryptographyKeyStoreAdminTypes.SystemKey {
	return func() AwsCryptographyKeyStoreAdminTypes.SystemKey {

		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMemberkmsSymmetricEncryption:
			var inputToConversion = aws_cryptography_keyStoreAdmin_SystemKey_kmsSymmetricEncryption_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMemberkmsSymmetricEncryption).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_SystemKey_{}.Create_kmsSymmetricEncryption_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.KmsSymmetricEncryption))
		case *awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMembertrustStorage:
			var inputToConversion = aws_cryptography_keyStoreAdmin_SystemKey_trustStorage_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMembertrustStorage).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_SystemKey_{}.Create_trustStorage_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.TrustStorage))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_SystemKey_kmsSymmetricEncryption_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricEncryption) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.Companion_KmsSymmetricEncryption_.Create_KmsSymmetricEncryption_(aws_cryptography_keyStoreAdmin_KmsSymmetricEncryption_KmsArn_ToDafny(input.KmsArn), aws_cryptography_keyStoreAdmin_KmsSymmetricEncryption_AwsKms_ToDafny(input.AwsKms)))
	}()
}

func aws_cryptography_keyStoreAdmin_KmsSymmetricEncryption_KmsArn_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_KmsSymmetricEncryption_AwsKms_ToDafny(input awscryptographykeystoresmithygeneratedtypes.AwsKms) AwsCryptographyKeyStoreTypes.AwsKms {
	return func() AwsCryptographyKeyStoreTypes.AwsKms {

		return AwsCryptographyKeyStoreTypes.Companion_AwsKms_.Create_AwsKms_(aws_cryptography_keyStore_AwsKms_grantTokens_ToDafny(input.GrantTokens), aws_cryptography_keyStore_AwsKms_kmsClient_ToDafny(input.KmsClient))
	}()
}

func aws_cryptography_keyStoreAdmin_SystemKey_trustStorage_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.TrustStorage) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.Companion_TrustStorage_.Create_TrustStorage_())
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationOutput_MutationResult_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationResult) AwsCryptographyKeyStoreAdminTypes.ApplyMutationResult {
	return func() AwsCryptographyKeyStoreAdminTypes.ApplyMutationResult {

		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationResultMemberContinueMutation:
			var inputToConversion = aws_cryptography_keyStoreAdmin_ApplyMutationResult_ContinueMutation_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationResultMemberContinueMutation).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_ApplyMutationResult_{}.Create_ContinueMutation_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.MutationToken))
		case *awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationResultMemberCompleteMutation:
			var inputToConversion = aws_cryptography_keyStoreAdmin_ApplyMutationResult_CompleteMutation_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.ApplyMutationResultMemberCompleteMutation).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_ApplyMutationResult_{}.Create_CompleteMutation_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.MutationComplete))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationResult_ContinueMutation_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationToken) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.Companion_MutationToken_.Create_MutationToken_(aws_cryptography_keyStoreAdmin_MutationToken_Identifier_ToDafny(input.Identifier), aws_cryptography_keyStoreAdmin_MutationToken_UUID_ToDafny(input.UUID), aws_cryptography_keyStoreAdmin_MutationToken_CreateTime_ToDafny(input.CreateTime)))
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationResult_CompleteMutation_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationComplete) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.Companion_MutationComplete_.Create_MutationComplete_())
	}()
}

func aws_cryptography_keyStoreAdmin_ApplyMutationOutput_MutatedBranchKeyItems_ToDafny(input []awscryptographykeystoreadminsmithygeneratedtypes.MutatedBranchKeyItem) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := aws_cryptography_keyStoreAdmin_MutatedBranchKeyItems_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutatedBranchKeyItems_member_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutatedBranchKeyItem) AwsCryptographyKeyStoreAdminTypes.MutatedBranchKeyItem {
	return func() AwsCryptographyKeyStoreAdminTypes.MutatedBranchKeyItem {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutatedBranchKeyItem_.Create_MutatedBranchKeyItem_(aws_cryptography_keyStoreAdmin_MutatedBranchKeyItem_ItemType_ToDafny(input.ItemType), aws_cryptography_keyStoreAdmin_MutatedBranchKeyItem_Description_ToDafny(input.Description))
	}()
}

func aws_cryptography_keyStoreAdmin_MutatedBranchKeyItem_ItemType_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutatedBranchKeyItem_Description_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_CreateKeyInput_Identifier_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*input)...))
	}()
}

func aws_cryptography_keyStoreAdmin_CreateKeyInput_EncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(aws_cryptography_keyStore_EncryptionContext_key_ToDafny(key), aws_cryptography_keyStore_EncryptionContext_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func aws_cryptography_keyStore_EncryptionContext_key_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOf(func() []interface{} {
			utf8.ValidString(input)
			b := []byte(input)
			f := make([]interface{}, len(b))
			for i, v := range b {
				f[i] = v
			}
			return f
		}()...)
	}()
}

func aws_cryptography_keyStore_EncryptionContext_value_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOf(func() []interface{} {
			utf8.ValidString(input)
			b := []byte(input)
			f := make([]interface{}, len(b))
			for i, v := range b {
				f[i] = v
			}
			return f
		}()...)
	}()
}

func aws_cryptography_keyStoreAdmin_CreateKeyInput_KmsArn_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArn) AwsCryptographyKeyStoreAdminTypes.KmsSymmetricKeyArn {
	return func() AwsCryptographyKeyStoreAdminTypes.KmsSymmetricKeyArn {

		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsKeyArn:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KmsSymmetricKeyArn_KmsKeyArn_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsKeyArn).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KmsSymmetricKeyArn_{}.Create_KmsKeyArn_(inputToConversion.UnwrapOr(nil).(dafny.Sequence))
		case *awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsMRKeyArn:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KmsSymmetricKeyArn_KmsMRKeyArn_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsMRKeyArn).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KmsSymmetricKeyArn_{}.Create_KmsMRKeyArn_(inputToConversion.UnwrapOr(nil).(dafny.Sequence))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_KmsSymmetricKeyArn_KmsKeyArn_ToDafny(input string) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(input)...))
	}()
}

func aws_cryptography_keyStoreAdmin_KmsSymmetricKeyArn_KmsMRKeyArn_ToDafny(input string) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(input)...))
	}()
}

func aws_cryptography_keyStoreAdmin_CreateKeyInput_Strategy_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategy) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsReEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsReEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreTypes.AwsKms)))
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsDecryptEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsDecryptEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.AwsKmsDecryptEncrypt)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_CreateKeyOutput_Identifier_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_DescribeMutationInput_Identifier_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_DescribeMutationOutput_MutationInFlight_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationInFlight) AwsCryptographyKeyStoreAdminTypes.MutationInFlight {
	return func() AwsCryptographyKeyStoreAdminTypes.MutationInFlight {

		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.MutationInFlightMemberYes:
			var inputToConversion = aws_cryptography_keyStoreAdmin_MutationInFlight_Yes_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.MutationInFlightMemberYes).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_MutationInFlight_{}.Create_Yes_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.MutationDescription))
		case *awscryptographykeystoreadminsmithygeneratedtypes.MutationInFlightMemberNo:
			var inputToConversion = aws_cryptography_keyStoreAdmin_MutationInFlight_No_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.MutationInFlightMemberNo).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_MutationInFlight_{}.Create_No_(inputToConversion.UnwrapOr(nil).(dafny.Sequence))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_MutationInFlight_Yes_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationDescription) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.Companion_MutationDescription_.Create_MutationDescription_(aws_cryptography_keyStoreAdmin_MutationDescription_MutationDetails_ToDafny(input.MutationDetails), aws_cryptography_keyStoreAdmin_MutationDescription_MutationToken_ToDafny(input.MutationToken)))
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDescription_MutationDetails_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationDetails) AwsCryptographyKeyStoreAdminTypes.MutationDetails {
	return func() AwsCryptographyKeyStoreAdminTypes.MutationDetails {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutationDetails_.Create_MutationDetails_(aws_cryptography_keyStoreAdmin_MutationDetails_Original_ToDafny(input.Original), aws_cryptography_keyStoreAdmin_MutationDetails_Terminal_ToDafny(input.Terminal), aws_cryptography_keyStoreAdmin_MutationDetails_Input_ToDafny(input.Input), aws_cryptography_keyStoreAdmin_MutationDetails_SystemKey_ToDafny(input.SystemKey), aws_cryptography_keyStoreAdmin_MutationDetails_CreateTime_ToDafny(input.CreateTime), aws_cryptography_keyStoreAdmin_MutationDetails_UUID_ToDafny(input.UUID))
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDetails_Original_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutableBranchKeyProperties) AwsCryptographyKeyStoreAdminTypes.MutableBranchKeyProperties {
	return func() AwsCryptographyKeyStoreAdminTypes.MutableBranchKeyProperties {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutableBranchKeyProperties_.Create_MutableBranchKeyProperties_(aws_cryptography_keyStoreAdmin_MutableBranchKeyProperties_KmsArn_ToDafny(input.KmsArn), aws_cryptography_keyStoreAdmin_MutableBranchKeyProperties_CustomEncryptionContext_ToDafny(input.CustomEncryptionContext))
	}()
}

func aws_cryptography_keyStoreAdmin_MutableBranchKeyProperties_KmsArn_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutableBranchKeyProperties_CustomEncryptionContext_ToDafny(input map[string]string) dafny.Map {
	return func() dafny.Map {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(aws_cryptography_keyStore_EncryptionContextString_key_ToDafny(key), aws_cryptography_keyStore_EncryptionContextString_value_ToDafny(val))
		}
		return fieldValue.ToMap()
	}()
}

func aws_cryptography_keyStore_EncryptionContextString_key_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStore_EncryptionContextString_value_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDetails_Terminal_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutableBranchKeyProperties) AwsCryptographyKeyStoreAdminTypes.MutableBranchKeyProperties {
	return func() AwsCryptographyKeyStoreAdminTypes.MutableBranchKeyProperties {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutableBranchKeyProperties_.Create_MutableBranchKeyProperties_(aws_cryptography_keyStoreAdmin_MutableBranchKeyProperties_KmsArn_ToDafny(input.KmsArn), aws_cryptography_keyStoreAdmin_MutableBranchKeyProperties_CustomEncryptionContext_ToDafny(input.CustomEncryptionContext))
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDetails_Input_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.Mutations) AwsCryptographyKeyStoreAdminTypes.Mutations {
	return func() AwsCryptographyKeyStoreAdminTypes.Mutations {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Mutations_.Create_Mutations_(aws_cryptography_keyStoreAdmin_Mutations_TerminalKmsArn_ToDafny(input.TerminalKmsArn), aws_cryptography_keyStoreAdmin_Mutations_TerminalEncryptionContext_ToDafny(input.TerminalEncryptionContext))
	}()
}

func aws_cryptography_keyStoreAdmin_Mutations_TerminalKmsArn_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*input)...))
	}()
}

func aws_cryptography_keyStoreAdmin_Mutations_TerminalEncryptionContext_ToDafny(input map[string]string) Wrappers.Option {
	return func() Wrappers.Option {
		fieldValue := dafny.NewMapBuilder()
		for key, val := range input {
			fieldValue.Add(aws_cryptography_keyStore_EncryptionContextString_key_ToDafny(key), aws_cryptography_keyStore_EncryptionContextString_value_ToDafny(val))
		}
		return Wrappers.Companion_Option_.Create_Some_(fieldValue.ToMap())
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDetails_SystemKey_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDetails_CreateTime_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDetails_UUID_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationDescription_MutationToken_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationToken) AwsCryptographyKeyStoreAdminTypes.MutationToken {
	return func() AwsCryptographyKeyStoreAdminTypes.MutationToken {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutationToken_.Create_MutationToken_(aws_cryptography_keyStoreAdmin_MutationToken_Identifier_ToDafny(input.Identifier), aws_cryptography_keyStoreAdmin_MutationToken_UUID_ToDafny(input.UUID), aws_cryptography_keyStoreAdmin_MutationToken_CreateTime_ToDafny(input.CreateTime))
	}()
}

func aws_cryptography_keyStoreAdmin_MutationInFlight_No_ToDafny(input string) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(input)...))
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationInput_Identifier_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationInput_Mutations_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.Mutations) AwsCryptographyKeyStoreAdminTypes.Mutations {
	return func() AwsCryptographyKeyStoreAdminTypes.Mutations {

		return AwsCryptographyKeyStoreAdminTypes.Companion_Mutations_.Create_Mutations_(aws_cryptography_keyStoreAdmin_Mutations_TerminalKmsArn_ToDafny(input.TerminalKmsArn), aws_cryptography_keyStoreAdmin_Mutations_TerminalEncryptionContext_ToDafny(input.TerminalEncryptionContext))
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationInput_Strategy_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategy) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsReEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsReEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreTypes.AwsKms)))
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsDecryptEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsDecryptEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.AwsKmsDecryptEncrypt)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationInput_SystemKey_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.SystemKey) AwsCryptographyKeyStoreAdminTypes.SystemKey {
	return func() AwsCryptographyKeyStoreAdminTypes.SystemKey {

		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMemberkmsSymmetricEncryption:
			var inputToConversion = aws_cryptography_keyStoreAdmin_SystemKey_kmsSymmetricEncryption_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMemberkmsSymmetricEncryption).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_SystemKey_{}.Create_kmsSymmetricEncryption_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.KmsSymmetricEncryption))
		case *awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMembertrustStorage:
			var inputToConversion = aws_cryptography_keyStoreAdmin_SystemKey_trustStorage_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.SystemKeyMembertrustStorage).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_SystemKey_{}.Create_trustStorage_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.TrustStorage))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationInput_DoNotVersion_ToDafny(input *bool) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(*input)
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationOutput_MutationToken_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.MutationToken) AwsCryptographyKeyStoreAdminTypes.MutationToken {
	return func() AwsCryptographyKeyStoreAdminTypes.MutationToken {

		return AwsCryptographyKeyStoreAdminTypes.Companion_MutationToken_.Create_MutationToken_(aws_cryptography_keyStoreAdmin_MutationToken_Identifier_ToDafny(input.Identifier), aws_cryptography_keyStoreAdmin_MutationToken_UUID_ToDafny(input.UUID), aws_cryptography_keyStoreAdmin_MutationToken_CreateTime_ToDafny(input.CreateTime))
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationOutput_MutatedBranchKeyItems_ToDafny(input []awscryptographykeystoreadminsmithygeneratedtypes.MutatedBranchKeyItem) dafny.Sequence {
	return func() dafny.Sequence {

		var fieldValue []interface{} = make([]interface{}, 0)
		for _, val := range input {
			element := aws_cryptography_keyStoreAdmin_MutatedBranchKeyItems_member_ToDafny(val)
			fieldValue = append(fieldValue, element)
		}
		return dafny.SeqOf(fieldValue...)
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationOutput_InitializeMutationFlag_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.InitializeMutationFlag) AwsCryptographyKeyStoreAdminTypes.InitializeMutationFlag {
	return func() AwsCryptographyKeyStoreAdminTypes.InitializeMutationFlag {

		var index int
		for _, enumVal := range input.Values() {
			index++
			if enumVal == input {
				break
			}
		}
		var enum interface{}
		for allEnums, i := dafny.Iterate(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_InitializeMutationFlag_{}.AllSingletonConstructors()), 0; i < index; i++ {
			var ok bool
			enum, ok = allEnums()
			if !ok {
				break
			}
		}
		return enum.(AwsCryptographyKeyStoreAdminTypes.InitializeMutationFlag)
	}()
}

func aws_cryptography_keyStoreAdmin_InitializeMutationOutput_LastModifiedTime_ToDafny(input *string) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(dafny.SeqOfChars([]dafny.Char(*input)...))
	}()
}

func aws_cryptography_keyStoreAdmin_VersionKeyInput_Identifier_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_VersionKeyInput_KmsArn_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArn) AwsCryptographyKeyStoreAdminTypes.KmsSymmetricKeyArn {
	return func() AwsCryptographyKeyStoreAdminTypes.KmsSymmetricKeyArn {

		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsKeyArn:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KmsSymmetricKeyArn_KmsKeyArn_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsKeyArn).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KmsSymmetricKeyArn_{}.Create_KmsKeyArn_(inputToConversion.UnwrapOr(nil).(dafny.Sequence))
		case *awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsMRKeyArn:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KmsSymmetricKeyArn_KmsMRKeyArn_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KmsSymmetricKeyArnMemberKmsMRKeyArn).Value)
			return AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KmsSymmetricKeyArn_{}.Create_KmsMRKeyArn_(inputToConversion.UnwrapOr(nil).(dafny.Sequence))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_VersionKeyInput_Strategy_ToDafny(input awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategy) Wrappers.Option {
	return func() Wrappers.Option {
		if input == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		switch input.(type) {
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsReEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsReEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsReEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreTypes.AwsKms)))
		case *awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt:
			var inputToConversion = aws_cryptography_keyStoreAdmin_KeyManagementStrategy_AwsKmsDecryptEncrypt_ToDafny(input.(*awscryptographykeystoreadminsmithygeneratedtypes.KeyManagementStrategyMemberAwsKmsDecryptEncrypt).Value)
			return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreAdminTypes.CompanionStruct_KeyManagementStrategy_{}.Create_AwsKmsDecryptEncrypt_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreAdminTypes.AwsKmsDecryptEncrypt)))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStoreAdmin_KeyStoreAdminException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationConflictException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationFromException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationInvalidException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationToException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_MutationVerificationException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_UnexpectedStateException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_UnsupportedFeatureException_message_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_KeyStoreAdminConfig_logicalKeyStoreName_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStoreAdmin_KeyStoreAdminConfig_storage_ToDafny(input awscryptographykeystoresmithygeneratedtypes.Storage) AwsCryptographyKeyStoreTypes.Storage {
	return func() AwsCryptographyKeyStoreTypes.Storage {

		switch input.(type) {
		case *awscryptographykeystoresmithygeneratedtypes.StorageMemberddb:
			var inputToConversion = aws_cryptography_keyStore_Storage_ddb_ToDafny(input.(*awscryptographykeystoresmithygeneratedtypes.StorageMemberddb).Value)
			return AwsCryptographyKeyStoreTypes.CompanionStruct_Storage_{}.Create_ddb_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreTypes.DynamoDBTable))
		case *awscryptographykeystoresmithygeneratedtypes.StorageMembercustom:
			var inputToConversion = func() Wrappers.Option {
				if (input.(*awscryptographykeystoresmithygeneratedtypes.StorageMembercustom).Value) == nil {
					return Wrappers.Companion_Option_.Create_None_()
				}
				return Wrappers.Companion_Option_.Create_Some_(awscryptographykeystoresmithygenerated.KeyStorageInterface_ToDafny(input.(*awscryptographykeystoresmithygeneratedtypes.StorageMembercustom).Value))
			}()
			return AwsCryptographyKeyStoreTypes.CompanionStruct_Storage_{}.Create_custom_(inputToConversion.UnwrapOr(nil).(AwsCryptographyKeyStoreTypes.IKeyStorageInterface))

		default:
			panic("Unhandled union type")
		}
	}()
}

func aws_cryptography_keyStore_Storage_ddb_ToDafny(input awscryptographykeystoresmithygeneratedtypes.DynamoDBTable) Wrappers.Option {
	return func() Wrappers.Option {

		return Wrappers.Companion_Option_.Create_Some_(AwsCryptographyKeyStoreTypes.Companion_DynamoDBTable_.Create_DynamoDBTable_(aws_cryptography_keyStore_DynamoDBTable_ddbTableName_ToDafny(input.DdbTableName), aws_cryptography_keyStore_DynamoDBTable_ddbClient_ToDafny(input.DdbClient)))
	}()
}

func aws_cryptography_keyStore_DynamoDBTable_ddbTableName_ToDafny(input string) dafny.Sequence {
	return func() dafny.Sequence {

		return dafny.SeqOfChars([]dafny.Char(input)...)
	}()
}

func aws_cryptography_keyStore_DynamoDBTable_ddbClient_ToDafny(input *dynamodb.Client) Wrappers.Option {
	return func() Wrappers.Option {
		if (input) == nil {
			return Wrappers.Companion_Option_.Create_None_()
		}
		return Wrappers.Companion_Option_.Create_Some_(&DynamoDBwrapped.Shim{Client: input})
	}()
}
