// Code generated by smithy-go-codegen DO NOT EDIT.

package WrappedAwsCryptographyMaterialProvidersService

import (
	"context"

	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyMaterialProvidersTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographymaterialproviderssmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/Wrappers"
	"github.com/dafny-lang/DafnyRuntimeGo/v4/dafny"
)

type Shim struct {
	AwsCryptographyMaterialProvidersTypes.IAwsCryptographicMaterialProvidersClient
	client *awscryptographymaterialproviderssmithygenerated.Client
}

func (_static *CompanionStruct_Default___) WrappedMaterialProviders(inputConfig AwsCryptographyMaterialProvidersTypes.MaterialProvidersConfig) Wrappers.Result {
	var nativeConfig = awscryptographymaterialproviderssmithygenerated.MaterialProvidersConfig_FromDafny(inputConfig)
	var nativeClient, nativeError = awscryptographymaterialproviderssmithygenerated.NewClient(nativeConfig)
	if nativeError != nil {
		return Wrappers.Companion_Result_.Create_Failure_(AwsCryptographyMaterialProvidersTypes.Companion_Error_.Create_Opaque_(nativeError))
	}
	return Wrappers.Companion_Result_.Create_Success_(&Shim{client: nativeClient})
}

func (shim *Shim) CreateAwsKmsKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsDiscoveryKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsDiscoveryKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsDiscoveryKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsDiscoveryKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsMultiKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsMultiKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsMultiKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsMultiKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsDiscoveryMultiKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsDiscoveryMultiKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsDiscoveryMultiKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsDiscoveryMultiKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsMrkKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsMrkKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsMrkKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsMrkKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsMrkMultiKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsMrkMultiKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsMrkMultiKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsMrkMultiKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsMrkDiscoveryKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsMrkDiscoveryKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsMrkDiscoveryKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsMrkDiscoveryKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsMrkDiscoveryMultiKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsMrkDiscoveryMultiKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsMrkDiscoveryMultiKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsMrkDiscoveryMultiKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsHierarchicalKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsHierarchicalKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsHierarchicalKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsHierarchicalKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsRsaKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsRsaKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsRsaKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsRsaKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateAwsKmsEcdhKeyring(input AwsCryptographyMaterialProvidersTypes.CreateAwsKmsEcdhKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateAwsKmsEcdhKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateAwsKmsEcdhKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateMultiKeyring(input AwsCryptographyMaterialProvidersTypes.CreateMultiKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateMultiKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateMultiKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateRawAesKeyring(input AwsCryptographyMaterialProvidersTypes.CreateRawAesKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateRawAesKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateRawAesKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateRawRsaKeyring(input AwsCryptographyMaterialProvidersTypes.CreateRawRsaKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateRawRsaKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateRawRsaKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateRawEcdhKeyring(input AwsCryptographyMaterialProvidersTypes.CreateRawEcdhKeyringInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateRawEcdhKeyringInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateRawEcdhKeyring(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.Keyring_ToDafny(native_response))
}

func (shim *Shim) CreateDefaultCryptographicMaterialsManager(input AwsCryptographyMaterialProvidersTypes.CreateDefaultCryptographicMaterialsManagerInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateDefaultCryptographicMaterialsManagerInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateDefaultCryptographicMaterialsManager(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsManager_ToDafny(native_response))
}

func (shim *Shim) CreateRequiredEncryptionContextCMM(input AwsCryptographyMaterialProvidersTypes.CreateRequiredEncryptionContextCMMInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateRequiredEncryptionContextCMMInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateRequiredEncryptionContextCMM(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsManager_ToDafny(native_response))
}

func (shim *Shim) CreateCryptographicMaterialsCache(input AwsCryptographyMaterialProvidersTypes.CreateCryptographicMaterialsCacheInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateCryptographicMaterialsCacheInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateCryptographicMaterialsCache(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsCache_ToDafny(native_response))
}

func (shim *Shim) CreateDefaultClientSupplier(input AwsCryptographyMaterialProvidersTypes.CreateDefaultClientSupplierInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.CreateDefaultClientSupplierInput_FromDafny(input)
	var native_response, native_error = shim.client.CreateDefaultClientSupplier(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.ClientSupplier_ToDafny(native_response))
}

func (shim *Shim) InitializeEncryptionMaterials(input AwsCryptographyMaterialProvidersTypes.InitializeEncryptionMaterialsInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.InitializeEncryptionMaterialsInput_FromDafny(input)
	var native_response, native_error = shim.client.InitializeEncryptionMaterials(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.EncryptionMaterials_ToDafny(*native_response))
}

func (shim *Shim) InitializeDecryptionMaterials(input AwsCryptographyMaterialProvidersTypes.InitializeDecryptionMaterialsInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.InitializeDecryptionMaterialsInput_FromDafny(input)
	var native_response, native_error = shim.client.InitializeDecryptionMaterials(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.DecryptionMaterials_ToDafny(*native_response))
}

func (shim *Shim) ValidEncryptionMaterialsTransition(input AwsCryptographyMaterialProvidersTypes.ValidEncryptionMaterialsTransitionInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.ValidEncryptionMaterialsTransitionInput_FromDafny(input)
	var native_error = shim.client.ValidEncryptionMaterialsTransition(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}

func (shim *Shim) ValidDecryptionMaterialsTransition(input AwsCryptographyMaterialProvidersTypes.ValidDecryptionMaterialsTransitionInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.ValidDecryptionMaterialsTransitionInput_FromDafny(input)
	var native_error = shim.client.ValidDecryptionMaterialsTransition(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}

func (shim *Shim) EncryptionMaterialsHasPlaintextDataKey(input AwsCryptographyMaterialProvidersTypes.EncryptionMaterials) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.EncryptionMaterials_FromDafny(input)
	var native_error = shim.client.EncryptionMaterialsHasPlaintextDataKey(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}

func (shim *Shim) DecryptionMaterialsWithPlaintextDataKey(input AwsCryptographyMaterialProvidersTypes.DecryptionMaterials) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.DecryptionMaterials_FromDafny(input)
	var native_error = shim.client.DecryptionMaterialsWithPlaintextDataKey(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}

func (shim *Shim) GetAlgorithmSuiteInfo(input dafny.Sequence) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.Aws_cryptography_materialProviders_GetAlgorithmSuiteInfoInput_binaryId_FromDafny(input)
	var native_response, native_error = shim.client.GetAlgorithmSuiteInfo(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(awscryptographymaterialproviderssmithygenerated.AlgorithmSuiteInfo_ToDafny(*native_response))
}

func (shim *Shim) ValidAlgorithmSuiteInfo(input AwsCryptographyMaterialProvidersTypes.AlgorithmSuiteInfo) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.AlgorithmSuiteInfo_FromDafny(input)
	var native_error = shim.client.ValidAlgorithmSuiteInfo(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}

func (shim *Shim) ValidateCommitmentPolicyOnEncrypt(input AwsCryptographyMaterialProvidersTypes.ValidateCommitmentPolicyOnEncryptInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.ValidateCommitmentPolicyOnEncryptInput_FromDafny(input)
	var native_error = shim.client.ValidateCommitmentPolicyOnEncrypt(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}

func (shim *Shim) ValidateCommitmentPolicyOnDecrypt(input AwsCryptographyMaterialProvidersTypes.ValidateCommitmentPolicyOnDecryptInput) Wrappers.Result {
	var native_request = awscryptographymaterialproviderssmithygenerated.ValidateCommitmentPolicyOnDecryptInput_FromDafny(input)
	var native_error = shim.client.ValidateCommitmentPolicyOnDecrypt(context.Background(), native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(awscryptographymaterialproviderssmithygenerated.Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(dafny.TupleOf())
}
