// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographykeystoresmithygenerated

import (
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyKeyStoreTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoresmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/smithy-dafny-standard-library/Wrappers"
)

type KeyStorageInterfaceNativeWrapper struct {
	AwsCryptographyKeyStoreTypes.IKeyStorageInterface
	Impl awscryptographykeystoresmithygeneratedtypes.IKeyStorageInterface
}

func (this *KeyStorageInterfaceNativeWrapper) WriteNewEncryptedBranchKey(input AwsCryptographyKeyStoreTypes.WriteNewEncryptedBranchKeyInput) Wrappers.Result {
	var native_request = WriteNewEncryptedBranchKeyInput_FromDafny(input)
	var native_response, native_error = this.Impl.WriteNewEncryptedBranchKey(native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(WriteNewEncryptedBranchKeyOutput_ToDafny(*native_response))
}

func (this *KeyStorageInterfaceNativeWrapper) WriteNewEncryptedBranchKeyVersion(input AwsCryptographyKeyStoreTypes.WriteNewEncryptedBranchKeyVersionInput) Wrappers.Result {
	var native_request = WriteNewEncryptedBranchKeyVersionInput_FromDafny(input)
	var native_response, native_error = this.Impl.WriteNewEncryptedBranchKeyVersion(native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(WriteNewEncryptedBranchKeyVersionOutput_ToDafny(*native_response))
}

func (this *KeyStorageInterfaceNativeWrapper) GetEncryptedActiveBranchKey(input AwsCryptographyKeyStoreTypes.GetEncryptedActiveBranchKeyInput) Wrappers.Result {
	var native_request = GetEncryptedActiveBranchKeyInput_FromDafny(input)
	var native_response, native_error = this.Impl.GetEncryptedActiveBranchKey(native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(GetEncryptedActiveBranchKeyOutput_ToDafny(*native_response))
}

func (this *KeyStorageInterfaceNativeWrapper) GetEncryptedBranchKeyVersion(input AwsCryptographyKeyStoreTypes.GetEncryptedBranchKeyVersionInput) Wrappers.Result {
	var native_request = GetEncryptedBranchKeyVersionInput_FromDafny(input)
	var native_response, native_error = this.Impl.GetEncryptedBranchKeyVersion(native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(GetEncryptedBranchKeyVersionOutput_ToDafny(*native_response))
}

func (this *KeyStorageInterfaceNativeWrapper) GetEncryptedBeaconKey(input AwsCryptographyKeyStoreTypes.GetEncryptedBeaconKeyInput) Wrappers.Result {
	var native_request = GetEncryptedBeaconKeyInput_FromDafny(input)
	var native_response, native_error = this.Impl.GetEncryptedBeaconKey(native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(GetEncryptedBeaconKeyOutput_ToDafny(*native_response))
}

func (this *KeyStorageInterfaceNativeWrapper) GetKeyStorageInfo(input AwsCryptographyKeyStoreTypes.GetKeyStorageInfoInput) Wrappers.Result {
	var native_request = GetKeyStorageInfoInput_FromDafny(input)
	var native_response, native_error = this.Impl.GetKeyStorageInfo(native_request)
	if native_error != nil {
		return Wrappers.Companion_Result_.Create_Failure_(Error_ToDafny(native_error))
	}
	return Wrappers.Companion_Result_.Create_Success_(GetKeyStorageInfoOutput_ToDafny(*native_response))
}
