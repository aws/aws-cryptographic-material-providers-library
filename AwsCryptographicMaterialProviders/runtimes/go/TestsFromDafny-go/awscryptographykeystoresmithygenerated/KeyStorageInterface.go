// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographykeystoresmithygenerated

import (
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyKeyStoreTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographykeystoresmithygeneratedtypes"
)

type KeyStorageInterface struct {
	Impl AwsCryptographyKeyStoreTypes.IKeyStorageInterface
}

func (this *KeyStorageInterface) WriteNewEncryptedBranchKey(params awscryptographykeystoresmithygeneratedtypes.WriteNewEncryptedBranchKeyInput) (*awscryptographykeystoresmithygeneratedtypes.WriteNewEncryptedBranchKeyOutput, error) {
	var dafny_request AwsCryptographyKeyStoreTypes.WriteNewEncryptedBranchKeyInput = WriteNewEncryptedBranchKeyInput_ToDafny(params)
	var dafny_response = this.Impl.WriteNewEncryptedBranchKey(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyKeyStoreTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = WriteNewEncryptedBranchKeyOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyKeyStoreTypes.WriteNewEncryptedBranchKeyOutput))
	return &native_response, nil

}

func (this *KeyStorageInterface) WriteNewEncryptedBranchKeyVersion(params awscryptographykeystoresmithygeneratedtypes.WriteNewEncryptedBranchKeyVersionInput) (*awscryptographykeystoresmithygeneratedtypes.WriteNewEncryptedBranchKeyVersionOutput, error) {
	var dafny_request AwsCryptographyKeyStoreTypes.WriteNewEncryptedBranchKeyVersionInput = WriteNewEncryptedBranchKeyVersionInput_ToDafny(params)
	var dafny_response = this.Impl.WriteNewEncryptedBranchKeyVersion(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyKeyStoreTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = WriteNewEncryptedBranchKeyVersionOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyKeyStoreTypes.WriteNewEncryptedBranchKeyVersionOutput))
	return &native_response, nil

}

func (this *KeyStorageInterface) GetEncryptedActiveBranchKey(params awscryptographykeystoresmithygeneratedtypes.GetEncryptedActiveBranchKeyInput) (*awscryptographykeystoresmithygeneratedtypes.GetEncryptedActiveBranchKeyOutput, error) {
	var dafny_request AwsCryptographyKeyStoreTypes.GetEncryptedActiveBranchKeyInput = GetEncryptedActiveBranchKeyInput_ToDafny(params)
	var dafny_response = this.Impl.GetEncryptedActiveBranchKey(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyKeyStoreTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetEncryptedActiveBranchKeyOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyKeyStoreTypes.GetEncryptedActiveBranchKeyOutput))
	return &native_response, nil

}

func (this *KeyStorageInterface) GetEncryptedBranchKeyVersion(params awscryptographykeystoresmithygeneratedtypes.GetEncryptedBranchKeyVersionInput) (*awscryptographykeystoresmithygeneratedtypes.GetEncryptedBranchKeyVersionOutput, error) {
	var dafny_request AwsCryptographyKeyStoreTypes.GetEncryptedBranchKeyVersionInput = GetEncryptedBranchKeyVersionInput_ToDafny(params)
	var dafny_response = this.Impl.GetEncryptedBranchKeyVersion(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyKeyStoreTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetEncryptedBranchKeyVersionOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyKeyStoreTypes.GetEncryptedBranchKeyVersionOutput))
	return &native_response, nil

}

func (this *KeyStorageInterface) GetEncryptedBeaconKey(params awscryptographykeystoresmithygeneratedtypes.GetEncryptedBeaconKeyInput) (*awscryptographykeystoresmithygeneratedtypes.GetEncryptedBeaconKeyOutput, error) {
	var dafny_request AwsCryptographyKeyStoreTypes.GetEncryptedBeaconKeyInput = GetEncryptedBeaconKeyInput_ToDafny(params)
	var dafny_response = this.Impl.GetEncryptedBeaconKey(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyKeyStoreTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetEncryptedBeaconKeyOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyKeyStoreTypes.GetEncryptedBeaconKeyOutput))
	return &native_response, nil

}

func (this *KeyStorageInterface) GetKeyStorageInfo(params awscryptographykeystoresmithygeneratedtypes.GetKeyStorageInfoInput) (*awscryptographykeystoresmithygeneratedtypes.GetKeyStorageInfoOutput, error) {
	var dafny_request AwsCryptographyKeyStoreTypes.GetKeyStorageInfoInput = GetKeyStorageInfoInput_ToDafny(params)
	var dafny_response = this.Impl.GetKeyStorageInfo(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyKeyStoreTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetKeyStorageInfoOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyKeyStoreTypes.GetKeyStorageInfoOutput))
	return &native_response, nil

}
