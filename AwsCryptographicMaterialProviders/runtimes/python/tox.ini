[tox]
isolated_build = True
envlist =
  py{311,312}-{dafnytests}
  docs

[testenv:base-command]
commands = poetry run pytest -l {posargs}

[testenv]
skip_install = True
allowlist_externals = poetry
passenv = AWS_*
commands_pre =
    poetry lock
    poetry install --with test
commands =
    dafnytests: {[testenv:base-command]commands} test/internaldafny -s -v

# Release tooling
[testenv:build]
basepython = python3
skip_install = True
allowlist_externals = poetry
commands =
    poetry install --no-root --with release
    poetry build

[testenv:release-base]
basepython = python3
skip_install = True
allowlist_externals = poetry
comands_pre =
    poetry install --no-root --with release
passenv =
    # Intentionally omit TWINE_REPOSITORY_URL from the passenv list,
    # as this overrides other ways of setting the repository and could
    # unexpectedly result in releasing to the wrong repo
    {[testenv]passenv} \
    TWINE_USERNAME \
    TWINE_PASSWORD
commands =
    {[testenv:build]commands}

[testenv:release-private]
basepython = python3
skip_install = True
allowlist_externals = poetry
comands_pre =
    poetry install --no-root --with release
passenv =
    {[testenv:release-base]passenv} \
    TWINE_REPOSITORY_URL
setenv =
    # Explicitly set the URL as the env variable value, which will cause us to
    # throw an error if the variable is not set. Otherwise, omission of the
    # env variable could cause us to unintentionally upload to the wrong repo
    TWINE_REPOSITORY_URL = {env:TWINE_REPOSITORY_URL}
commands =
    {[testenv:release-base]commands}
    # Omitting an explicit repository will cause twine to use the repository
    # specified in the environment variable
    poetry run twine upload --skip-existing {toxinidir}/dist/*

[testenv:test-release]
basepython = python3
skip_install = True
allowlist_externals = poetry
comands_pre =
    poetry install --no-root --with release
passenv =
    {[testenv:release-base]passenv}
commands =
    {[testenv:release-base]commands}
    poetry run twine upload --skip-existing --repository testpypi {toxinidir}/dist/*

[testenv:release]
basepython = python3
skip_install = True
allowlist_externals = poetry
comands_pre =
    poetry install --no-root --with release
passenv =
    {[testenv:release-base]passenv}
commands =
    {[testenv:release-base]commands}
    poetry run twine upload --skip-existing --repository pypi {toxinidir}/dist/*
