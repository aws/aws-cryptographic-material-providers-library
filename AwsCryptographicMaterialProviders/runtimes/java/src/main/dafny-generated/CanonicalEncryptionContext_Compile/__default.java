// Class __default
// Dafny class __default compiled into Java
package CanonicalEncryptionContext_Compile;

@SuppressWarnings({"unchecked", "deprecation"})
public class __default {
  public __default() {
  }
  public static Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error> EncryptionContextToAAD(dafny.DafnyMap<? extends dafny.DafnySequence<? extends java.lang.Byte>, ? extends dafny.DafnySequence<? extends java.lang.Byte>> encryptionContext) {
    Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error> _0_valueOrError0 = Wrappers_Compile.__default.<software.amazon.cryptography.materialproviders.internaldafny.types.Error>Need(software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), java.lang.Long.compareUnsigned((long) (encryptionContext).cardinalityInt(), (StandardLibrary_mUInt_Compile.__default.UINT16__LIMIT()).longValue()) < 0, software.amazon.cryptography.materialproviders.internaldafny.types.Error.create_AwsCryptographicMaterialProvidersException(dafny.DafnySequence.asString("Encryption Context is too large")));
    if ((_0_valueOrError0).IsFailure(software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor())) {
      return (_0_valueOrError0).<dafny.DafnySequence<? extends java.lang.Byte>>PropagateFailure(software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()));
    } else {
      dafny.DafnySequence<? extends dafny.DafnySequence<? extends java.lang.Byte>> _1_keys = SortedSets.__default.<java.lang.Byte>SetToOrderedSequence2(BoundedInts_Compile.uint8._typeDescriptor(), (encryptionContext).keySet(), StandardLibrary_mUInt_Compile.__default::UInt8Less);
      if ((((short) (_1_keys).cardinalityInt()) == 0 ? 0 : 1) == 0) {
        return Wrappers_Compile.Result.<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>create_Success(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), dafny.DafnySequence.<java.lang.Byte> empty(BoundedInts_Compile.uint8._typeDescriptor()));
      } else {
        java.util.function.Function<dafny.DafnySequence<? extends java.lang.Byte>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>> _2_KeyIntoPairBytes = ((java.util.function.Function<dafny.DafnyMap<? extends dafny.DafnySequence<? extends java.lang.Byte>, ? extends dafny.DafnySequence<? extends java.lang.Byte>>, java.util.function.Function<dafny.DafnySequence<? extends java.lang.Byte>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>>>)(_3_encryptionContext) -> ((java.util.function.Function<dafny.DafnySequence<? extends java.lang.Byte>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>>)(_4_k_boxed0) -> {
          dafny.DafnySequence<? extends java.lang.Byte> _4_k = ((dafny.DafnySequence<? extends java.lang.Byte>)(java.lang.Object)(_4_k_boxed0));
          return ((Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>)(java.lang.Object)(dafny.Helpers.<dafny.DafnySequence<? extends java.lang.Byte>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>>Let(((dafny.DafnySequence<? extends java.lang.Byte>)(java.lang.Object)((_3_encryptionContext).get(_4_k))), boxed8 -> {
            dafny.DafnySequence<? extends java.lang.Byte> _pat_let4_0 = ((dafny.DafnySequence<? extends java.lang.Byte>)(java.lang.Object)(boxed8));
            return ((Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>)(java.lang.Object)(dafny.Helpers.<dafny.DafnySequence<? extends java.lang.Byte>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>>Let(_pat_let4_0, boxed9 -> {
              dafny.DafnySequence<? extends java.lang.Byte> _5_v = ((dafny.DafnySequence<? extends java.lang.Byte>)(java.lang.Object)(boxed9));
              return ((Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>)(java.lang.Object)(dafny.Helpers.<Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>>Let(Wrappers_Compile.__default.<software.amazon.cryptography.materialproviders.internaldafny.types.Error>Need(software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), (StandardLibrary_mUInt_Compile.__default.<java.lang.Byte>HasUint16Len(BoundedInts_Compile.uint8._typeDescriptor(), _4_k)) && (StandardLibrary_mUInt_Compile.__default.<java.lang.Byte>HasUint16Len(BoundedInts_Compile.uint8._typeDescriptor(), _5_v)), software.amazon.cryptography.materialproviders.internaldafny.types.Error.create_AwsCryptographicMaterialProvidersException(dafny.DafnySequence.asString("Unable to serialize encryption context"))), boxed10 -> {
                Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error> _pat_let5_0 = ((Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error>)(java.lang.Object)(boxed10));
                return ((Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>)(java.lang.Object)(dafny.Helpers.<Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error>, Wrappers_Compile.Result<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>>Let(_pat_let5_0, boxed11 -> {
                  Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error> _6_valueOrError1 = ((Wrappers_Compile.Outcome<software.amazon.cryptography.materialproviders.internaldafny.types.Error>)(java.lang.Object)(boxed11));
                  return (((_6_valueOrError1).IsFailure(software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor())) ? ((_6_valueOrError1).<dafny.DafnySequence<? extends java.lang.Byte>>PropagateFailure(software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()))) : (Wrappers_Compile.Result.<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>create_Success(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), dafny.DafnySequence.<java.lang.Byte>concatenate(dafny.DafnySequence.<java.lang.Byte>concatenate(dafny.DafnySequence.<java.lang.Byte>concatenate(StandardLibrary_mUInt_Compile.__default.UInt16ToSeq((short) (_4_k).cardinalityInt()), _4_k), StandardLibrary_mUInt_Compile.__default.UInt16ToSeq((short) (_5_v).cardinalityInt())), _5_v))));
                }
                )));
              }
              )));
            }
            )));
          }
          )));
        })).apply(encryptionContext);
        Wrappers_Compile.Result<dafny.DafnySequence<? extends dafny.DafnySequence<? extends java.lang.Byte>>, software.amazon.cryptography.materialproviders.internaldafny.types.Error> _7_valueOrError2 = Seq_Compile.__default.<dafny.DafnySequence<? extends java.lang.Byte>, dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>MapWithResult(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()), dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), _2_KeyIntoPairBytes, _1_keys);
        if ((_7_valueOrError2).IsFailure(dafny.DafnySequence.<dafny.DafnySequence<? extends java.lang.Byte>>_typeDescriptor(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor())), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor())) {
          return (_7_valueOrError2).<dafny.DafnySequence<? extends java.lang.Byte>>PropagateFailure(dafny.DafnySequence.<dafny.DafnySequence<? extends java.lang.Byte>>_typeDescriptor(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor())), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()));
        } else {
          dafny.DafnySequence<? extends dafny.DafnySequence<? extends java.lang.Byte>> _8_pairsBytes = (_7_valueOrError2).Extract(dafny.DafnySequence.<dafny.DafnySequence<? extends java.lang.Byte>>_typeDescriptor(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor())), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor());
          dafny.DafnySequence<? extends java.lang.Byte> _9_allBytes = dafny.DafnySequence.<java.lang.Byte>concatenate(StandardLibrary_mUInt_Compile.__default.UInt16ToSeq((short) (_1_keys).cardinalityInt()), Seq_Compile.__default.<java.lang.Byte>Flatten(BoundedInts_Compile.uint8._typeDescriptor(), _8_pairsBytes));
          return Wrappers_Compile.Result.<dafny.DafnySequence<? extends java.lang.Byte>, software.amazon.cryptography.materialproviders.internaldafny.types.Error>create_Success(dafny.DafnySequence.<java.lang.Byte>_typeDescriptor(BoundedInts_Compile.uint8._typeDescriptor()), software.amazon.cryptography.materialproviders.internaldafny.types.Error._typeDescriptor(), _9_allBytes);
        }
      }
    }
  }
  @Override
  public java.lang.String toString() {
    return "CanonicalEncryptionContext._default";
  }
}
