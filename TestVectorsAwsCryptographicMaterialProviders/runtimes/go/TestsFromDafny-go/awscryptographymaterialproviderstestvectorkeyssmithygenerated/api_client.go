// Code generated by smithy-go-codegen DO NOT EDIT.

package awscryptographymaterialproviderstestvectorkeyssmithygenerated

import (
	"context"

	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/AwsCryptographyMaterialProvidersTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographymaterialproviderssmithygenerated"
	"github.com/aws/aws-cryptographic-material-providers-library/releases/go/mpl/awscryptographymaterialproviderssmithygeneratedtypes"
	"github.com/aws/aws-cryptographic-material-providers-library/testvectors/AwsCryptographyMaterialProvidersTestVectorKeysTypes"
	"github.com/aws/aws-cryptographic-material-providers-library/testvectors/KeyVectors"
	"github.com/aws/aws-cryptographic-material-providers-library/testvectors/awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes"
)

type Client struct {
	DafnyClient AwsCryptographyMaterialProvidersTestVectorKeysTypes.IKeyVectorsClient
}

func NewClient(clientConfig awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.KeyVectorsConfig) (*Client, error) {
	var dafnyConfig = KeyVectorsConfig_ToDafny(clientConfig)
	var dafny_response = KeyVectors.Companion_Default___.KeyVectors(dafnyConfig)
	if dafny_response.Is_Failure() {
		panic("Client construction failed. This should never happen")
	}
	var dafnyClient = dafny_response.Extract().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.IKeyVectorsClient)
	client := &Client{dafnyClient}
	return client, nil
}

func (client *Client) CreateTestVectorKeyring(ctx context.Context, params awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.TestVectorKeyringInput) (awscryptographymaterialproviderssmithygeneratedtypes.IKeyring, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		var defaultVal awscryptographymaterialproviderssmithygeneratedtypes.IKeyring
		return defaultVal, opaqueErr
	}

	var dafny_request AwsCryptographyMaterialProvidersTestVectorKeysTypes.TestVectorKeyringInput = TestVectorKeyringInput_ToDafny(params)
	var dafny_response = client.DafnyClient.CreateTestVectorKeyring(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.Error)
		var defaultVal awscryptographymaterialproviderssmithygeneratedtypes.IKeyring
		return defaultVal, Error_FromDafny(err)
	}
	var native_response = awscryptographymaterialproviderssmithygenerated.Keyring_FromDafny(dafny_response.Dtor_value().(AwsCryptographyMaterialProvidersTypes.IKeyring))
	return native_response, nil

}

func (client *Client) CreateWrappedTestVectorKeyring(ctx context.Context, params awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.TestVectorKeyringInput) (awscryptographymaterialproviderssmithygeneratedtypes.IKeyring, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		var defaultVal awscryptographymaterialproviderssmithygeneratedtypes.IKeyring
		return defaultVal, opaqueErr
	}

	var dafny_request AwsCryptographyMaterialProvidersTestVectorKeysTypes.TestVectorKeyringInput = TestVectorKeyringInput_ToDafny(params)
	var dafny_response = client.DafnyClient.CreateWrappedTestVectorKeyring(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.Error)
		var defaultVal awscryptographymaterialproviderssmithygeneratedtypes.IKeyring
		return defaultVal, Error_FromDafny(err)
	}
	var native_response = awscryptographymaterialproviderssmithygenerated.Keyring_FromDafny(dafny_response.Dtor_value().(AwsCryptographyMaterialProvidersTypes.IKeyring))
	return native_response, nil

}

func (client *Client) CreateWrappedTestVectorCmm(ctx context.Context, params awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.TestVectorCmmInput) (awscryptographymaterialproviderssmithygeneratedtypes.ICryptographicMaterialsManager, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		var defaultVal awscryptographymaterialproviderssmithygeneratedtypes.ICryptographicMaterialsManager
		return defaultVal, opaqueErr
	}

	var dafny_request AwsCryptographyMaterialProvidersTestVectorKeysTypes.TestVectorCmmInput = TestVectorCmmInput_ToDafny(params)
	var dafny_response = client.DafnyClient.CreateWrappedTestVectorCmm(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.Error)
		var defaultVal awscryptographymaterialproviderssmithygeneratedtypes.ICryptographicMaterialsManager
		return defaultVal, Error_FromDafny(err)
	}
	var native_response = awscryptographymaterialproviderssmithygenerated.CryptographicMaterialsManager_FromDafny(dafny_response.Dtor_value().(AwsCryptographyMaterialProvidersTypes.ICryptographicMaterialsManager))
	return native_response, nil

}

func (client *Client) GetKeyDescription(ctx context.Context, params awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.GetKeyDescriptionInput) (*awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.GetKeyDescriptionOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyMaterialProvidersTestVectorKeysTypes.GetKeyDescriptionInput = GetKeyDescriptionInput_ToDafny(params)
	var dafny_response = client.DafnyClient.GetKeyDescription(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = GetKeyDescriptionOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.GetKeyDescriptionOutput))
	return &native_response, nil

}

func (client *Client) SerializeKeyDescription(ctx context.Context, params awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.SerializeKeyDescriptionInput) (*awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.SerializeKeyDescriptionOutput, error) {
	err := params.Validate()
	if err != nil {
		opaqueErr := awscryptographymaterialproviderstestvectorkeyssmithygeneratedtypes.OpaqueError{
			ErrObject: err,
		}
		return nil, opaqueErr
	}

	var dafny_request AwsCryptographyMaterialProvidersTestVectorKeysTypes.SerializeKeyDescriptionInput = SerializeKeyDescriptionInput_ToDafny(params)
	var dafny_response = client.DafnyClient.SerializeKeyDescription(dafny_request)

	if dafny_response.Is_Failure() {
		err := dafny_response.Dtor_error().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.Error)
		return nil, Error_FromDafny(err)
	}
	var native_response = SerializeKeyDescriptionOutput_FromDafny(dafny_response.Dtor_value().(AwsCryptographyMaterialProvidersTestVectorKeysTypes.SerializeKeyDescriptionOutput))
	return &native_response, nil

}
